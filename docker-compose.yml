services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.4.2
    ports:
      - "${REDIS_PORTS}"
    volumes:
      - redis_data:/data

  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORTS}"
    depends_on:
      - db
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 1
      DATABASE_URL: "${DATABASE_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    env_file:
      - .env

  celery-worker:
    build: ./backend
    command: celery -A app.tasks worker --loglevel=info --pool=solo
    depends_on:
      - db
      - redis
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 1
      DATABASE_URL: "${DATABASE_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    env_file:
      - .env

  celery-beat:
    build: ./backend
    command: celery -A app.tasks beat --loglevel=info
    depends_on:
      - db
      - redis
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 1
      DATABASE_URL: "${DATABASE_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:
